{
  "dir_info": {
    "include": [
      "include",
      "include/utils"
    ],
    "src": [
      "src",
      "src/core",
      "src/utils"
    ],
    "tests": [
      "tests"
    ],
    "app": [
      "app"
    ],
    "scripts": [
      "scripts"
    ]
  },
  "cmake_lists": [
    "cmake_minimum_required(VERSION 3.10)",
    "project({})",
    "",
    "set(CMAKE_CXX_STANDARD 11)",
    "include_directories(${PROJECT_SOURCE_DIR}/include)",
    "add_executable(main main.cc)",
    "target_link_libraries(main ${PROJECT_NAME})",
    "add_subdirectory(src)"
  ],
  "src_cmake": [
    "set(PROJECT_NAME ${CMAKE_PROJECT_NAME})",
    "set(CMAKE_CXX_STANDARD 11)",
    "set(CPP_SOURCES hello.cc)",
    "add_library(${PROJECT_NAME} ${CPP_SOURCES})",
    "add_library(${PROJECT_NAME}_lib STATIC ${CPP_SOURCES})",
    "install()"
  ],
  "main_cpp": [
    "#include \"hello.h\"",
    "int main() {",
    "    hello();",
    "    return 0;",
    "}"
  ],
  "include_hello": [
    "#pragma once",
    "void hello();"
  ],
  "src_hello":[
    "#include <iostream>",
    "#include \"hello.h\"",
    "void hello() {",
    "    std::cout << \"Hello, {}!\" << std::endl;",
    "}"
  ],
  "run_sh": [
    "#!/bin/bash",
    "cd .. && mkdir build && cd build && cmake .. && make -j && ./main"
  ]
}

