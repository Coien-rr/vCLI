{
  "dir_list": [
    "include",
    "src", 
    "tests",
    "app",
    "scripts"
  ],
  "file_list": [
    "CMakeLists.txt",
    "main.cc",
    "src/hello.cc",
    "include/hello.h",
    "scripts/run.sh"
  ],
  "file_contents": {
     "cmakelists_txt": [
      "cmake_minimum_required(VERSION 3.10)",
      "project({})",
      "",
      "set(CMAKE_CXX_STANDARD 11)",
      "include_directories(${PROJECT_SOURCE_DIR}/include)",
      "add_executable(main main.cc)",
      "target_link_libraries(main ${PROJECT_NAME})",
      "add_subdirectory(src)"
    ],
    "main_cc": [
      "#include \"hello.h\"",
      "int main() {",
      "    hello();",
      "    return 0;",
      "}"
    ],
    "src_cmakelists_txt": [
      "set(PROJECT_NAME ${CMAKE_PROJECT_NAME})",
      "set(CMAKE_CXX_STANDARD 11)",
      "set(CPP_SOURCES hello.cc)",
      "add_library(${PROJECT_NAME} ${CPP_SOURCES})",
      "add_library(${PROJECT_NAME}_lib STATIC ${CPP_SOURCES})",
      "install()"
    ],
    "src_hello_cc": [
      "#include <iostream>",
      "#include \"hello.h\"",
      "void hello() {",
      "    std::cout << \"Hello, {}!\" << std::endl;",
      "}"
    ],
    "include_hello_h": [
      "#pragma once",
      "void hello();"
    ],
    "scripts_run_sh": [
      "#!/bin/bash",
      "cd .. && mkdir build && cd build && cmake .. && make -j && ./main"
    ]
  },
  "dir_info": {
    "include": [
      "include",
      "include/utils"
    ],
    "src": [
      "src",
      "src/core",
      "src/utils"
    ],
    "tests": [
      "tests"
    ],
    "app": [
      "app"
    ],
    "scripts": [
      "scripts"
    ]
  }
}

